From 4467bd6a54593357a593a17ea9703395641c4eba Mon Sep 17 00:00:00 2001
From: Hou Qi <qi.hou@nxp.com>
Date: Thu, 2 Nov 2023 11:26:12 +0900
Subject: [PATCH 12/19] V4L2VDA: Add fps in SkiaOutputSurfaceImplOnGpu by
 VLOG(1)

Upstream-Status: Inappropriate [NXP specific]
---
 .../skia_output_surface_impl_on_gpu.cc         | 18 ++++++++++++++++++
 .../skia_output_surface_impl_on_gpu.h          |  1 +
 2 files changed, 19 insertions(+)

diff --git a/components/viz/service/display_embedder/skia_output_surface_impl_on_gpu.cc b/components/viz/service/display_embedder/skia_output_surface_impl_on_gpu.cc
index 2d82ab0f062c9..db11a0b994073 100644
--- a/components/viz/service/display_embedder/skia_output_surface_impl_on_gpu.cc
+++ b/components/viz/service/display_embedder/skia_output_surface_impl_on_gpu.cc
@@ -8,6 +8,7 @@
 #include <string>
 #include <utility>
 #include <vector>
+#include <sys/time.h>
 
 #include "base/debug/crash_logging.h"
 #include "base/debug/dump_without_crashing.h"
@@ -131,6 +132,15 @@
 #include "components/viz/service/display_embedder/output_presenter_fuchsia.h"
 #endif
 
+static uint64_t start_time = 0;
+static uint64_t stop_time = 0;
+
+uint64_t NowMicros() {
+  struct timeval tv;
+  gettimeofday(&tv, nullptr);
+  return static_cast<uint64_t>(tv.tv_sec) * 1e6 + tv.tv_usec;
+}
+
 namespace viz {
 
 namespace {
@@ -330,6 +340,7 @@ SkiaOutputSurfaceImplOnGpu::SkiaOutputSurfaceImplOnGpu(
       async_read_result_lock_(base::MakeRefCounted<AsyncReadResultLock>()) {
   DCHECK_CALLED_ON_VALID_THREAD(thread_checker_);
 
+  swap_buffers_number_ = 0;
   weak_ptr_ = weak_ptr_factory_.GetWeakPtr();
   buffer_presented_callback_ = CreateSafeRepeatingCallback(
       weak_ptr_, std::move(buffer_presented_callback));
@@ -599,7 +610,13 @@ void SkiaOutputSurfaceImplOnGpu::SwapBuffers(OutputSurfaceFrame frame) {
   TRACE_EVENT0("viz", "SkiaOutputSurfaceImplOnGpu::SwapBuffers");
   DCHECK_CALLED_ON_VALID_THREAD(thread_checker_);
 
+  if ( swap_buffers_number_ == 0)
+    start_time = NowMicros();
+
+  swap_buffers_number_++;
+  stop_time = NowMicros();
   SwapBuffersInternal(std::move(frame));
+  VLOG(1) << "total showed " << swap_buffers_number_ << " frames, total time " << (stop_time - start_time) << " ms, fps is " << swap_buffers_number_*1e6/(stop_time - start_time) << std::endl;
 }
 
 void SkiaOutputSurfaceImplOnGpu::EnsureMinNumberOfBuffers(int n) {
@@ -1888,6 +1905,7 @@ bool SkiaOutputSurfaceImplOnGpu::Initialize() {
   if (context_state_)
     context_state_->AddContextLostObserver(this);
 
+  start_time = NowMicros();
   return true;
 }
 
diff --git a/components/viz/service/display_embedder/skia_output_surface_impl_on_gpu.h b/components/viz/service/display_embedder/skia_output_surface_impl_on_gpu.h
index 8c13e3f5855ce..e75d4e5b74af1 100644
--- a/components/viz/service/display_embedder/skia_output_surface_impl_on_gpu.h
+++ b/components/viz/service/display_embedder/skia_output_surface_impl_on_gpu.h
@@ -500,6 +500,7 @@ class SkiaOutputSurfaceImplOnGpu
   ScheduleGpuTaskCallback schedule_gpu_task_;
   GpuVSyncCallback gpu_vsync_callback_;
   AddChildWindowToBrowserCallback add_child_window_to_browser_callback_;
+  size_t swap_buffers_number_;
 
   // ImplOnGpu::CopyOutput can create SharedImages via ImplOnGpu's
   // SharedImageFactory. Clients can use these images via CopyOutputResult and
-- 
2.34.1

