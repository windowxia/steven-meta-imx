From 214c8c31f4b9adbe8715f742635670094d3bdcac Mon Sep 17 00:00:00 2001
From: Hou Qi <qi.hou@nxp.com>
Date: Thu, 2 Nov 2023 00:03:11 +0900
Subject: [PATCH 10/19] V4L2VDA: Add hevc format support

Upstream-Status: Inappropriate [NXP specific]
---
 media/base/supported_types.cc                          | 2 +-
 media/gpu/v4l2/legacy/v4l2_video_decode_accelerator.cc | 1 +
 media/gpu/v4l2/v4l2_utils.cc                           | 4 +++-
 media/media_options.gni                                | 2 +-
 4 files changed, 6 insertions(+), 3 deletions(-)

diff --git a/media/base/supported_types.cc b/media/base/supported_types.cc
index ec5e5df9760ad..733732133efde 100644
--- a/media/base/supported_types.cc
+++ b/media/base/supported_types.cc
@@ -359,7 +359,7 @@ bool IsDefaultSupportedVideoType(const VideoType& type) {
     case VideoCodec::kVP9:
       return IsVp9ProfileSupported(type);
     case VideoCodec::kHEVC:
-      return IsHevcProfileSupported(type);
+      return true;
     case VideoCodec::kMPEG4:
       return IsMPEG4Supported();
     case VideoCodec::kDolbyVision:
diff --git a/media/gpu/v4l2/legacy/v4l2_video_decode_accelerator.cc b/media/gpu/v4l2/legacy/v4l2_video_decode_accelerator.cc
index 4dd4508a63107..89a8976eb457d 100644
--- a/media/gpu/v4l2/legacy/v4l2_video_decode_accelerator.cc
+++ b/media/gpu/v4l2/legacy/v4l2_video_decode_accelerator.cc
@@ -90,6 +90,7 @@ static const std::vector<uint32_t> kSupportedInputFourCCs = {
     V4L2_PIX_FMT_H264,
     V4L2_PIX_FMT_VP8,
     V4L2_PIX_FMT_VP9,
+    V4L2_PIX_FMT_HEVC,
 };
 
 // static
diff --git a/media/gpu/v4l2/v4l2_utils.cc b/media/gpu/v4l2/v4l2_utils.cc
index d20746d6a8a2d..3b9264318c6f0 100644
--- a/media/gpu/v4l2/v4l2_utils.cc
+++ b/media/gpu/v4l2/v4l2_utils.cc
@@ -459,7 +459,7 @@ void GetSupportedResolution(const IoctlAsCallback& ioctl_cb,
                             uint32_t pixelformat,
                             gfx::Size* min_resolution,
                             gfx::Size* max_resolution) {
-  constexpr gfx::Size kDefaultMaxCodedSize(1920, 1088);
+  constexpr gfx::Size kDefaultMaxCodedSize(4096, 4096);
   *max_resolution = kDefaultMaxCodedSize;
   constexpr gfx::Size kDefaultMinCodedSize(16, 16);
   *min_resolution = kDefaultMinCodedSize;
@@ -502,6 +502,8 @@ uint32_t VideoCodecProfileToV4L2PixFmt(VideoCodecProfile profile,
     return V4L2_PIX_FMT_VP8;
   } else if (profile >= VP9PROFILE_MIN && profile <= VP9PROFILE_MAX) {
     return V4L2_PIX_FMT_VP9;
+  } else if (profile >= HEVCPROFILE_MIN && profile <= HEVCPROFILE_MAX) {
+    return V4L2_PIX_FMT_HEVC;
   } else if (profile == HEVCPROFILE_MAIN) {
     return V4L2_PIX_FMT_HEVC;
   } else {
diff --git a/media/media_options.gni b/media/media_options.gni
index 40bad1426693a..5683f1988b572 100644
--- a/media/media_options.gni
+++ b/media/media_options.gni
@@ -131,7 +131,7 @@ declare_args() {
   # applies to video-capable devices.
   enable_platform_hevc =
       proprietary_codecs && (enable_hevc_parser_and_hw_decoder ||
-                             is_cast_media_device || is_chromeos_lacros)
+                             is_cast_media_device || is_chromeos_lacros || use_v4l2_codec)
 
   enable_mse_mpeg2ts_stream_parser =
       proprietary_codecs &&
-- 
2.34.1

