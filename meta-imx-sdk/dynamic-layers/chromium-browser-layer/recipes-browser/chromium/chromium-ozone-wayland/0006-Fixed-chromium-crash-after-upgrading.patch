From ff65d380391692f57de3f3517b2e92f79623add6 Mon Sep 17 00:00:00 2001
From: Wujian Sun <wujian.sun_1@nxp.com>
Date: Wed, 22 Nov 2023 16:52:59 +0800
Subject: [PATCH] Fixed chromium crash after upgrading

Native display fail to get GBM platform,
add EGL_PLATFORM_GBM_KHR for WAYLAND_GBM.

Upstream-Status: Inappropriate [i.MX-specific]

Signed-off-by: Xianzhong Li <xianzhong.li@nxp.com
Signed-off-by: Wujian Sun <wujian.sun_1@nxp.com>
---
 ui/gfx/linux/gbm_device.h                              |  2 ++
 ui/gfx/linux/gbm_wrapper.cc                            |  2 ++
 .../platform/wayland/gpu/wayland_buffer_manager_gpu.cc |  2 --
 .../platform/wayland/gpu/wayland_surface_factory.cc    | 10 ++++++++++
 4 files changed, 14 insertions(+), 2 deletions(-)

diff --git a/ui/gfx/linux/gbm_device.h b/ui/gfx/linux/gbm_device.h
index 8fd34e8c7d434..fa5e6a58544bc 100644
--- a/ui/gfx/linux/gbm_device.h
+++ b/ui/gfx/linux/gbm_device.h
@@ -34,6 +34,8 @@ class GbmDevice {
       gfx::NativePixmapHandle handle) = 0;
 
   virtual bool CanCreateBufferForFormat(uint32_t format) = 0;
+
+  virtual gbm_device* get() = 0;
 };
 
 }  // namespace ui
diff --git a/ui/gfx/linux/gbm_wrapper.cc b/ui/gfx/linux/gbm_wrapper.cc
index 6ed61c072ff9d..2c790d79d1c9e 100644
--- a/ui/gfx/linux/gbm_wrapper.cc
+++ b/ui/gfx/linux/gbm_wrapper.cc
@@ -390,6 +390,8 @@ class Device final : public ui::GbmDevice {
   }
 #endif
 
+ gbm_device* get() {return device_;};
+
  private:
   const raw_ptr<gbm_device> device_;
 };
diff --git a/ui/ozone/platform/wayland/gpu/wayland_buffer_manager_gpu.cc b/ui/ozone/platform/wayland/gpu/wayland_buffer_manager_gpu.cc
index b3530699f56ba..f2d1c0e27de8d 100644
--- a/ui/ozone/platform/wayland/gpu/wayland_buffer_manager_gpu.cc
+++ b/ui/ozone/platform/wayland/gpu/wayland_buffer_manager_gpu.cc
@@ -349,8 +349,6 @@ GbmDevice* WaylandBufferManagerGpu::GetGbmDevice() {
   if (!supports_dmabuf_ || (!gl::GLSurfaceEGL::GetGLDisplayEGL()
                                  ->ext->b_EGL_EXT_image_dma_buf_import &&
                             !use_fake_gbm_device_for_test_)) {
-    supports_dmabuf_ = false;
-    return nullptr;
   }
 
   if (gbm_device_ || use_fake_gbm_device_for_test_)
diff --git a/ui/ozone/platform/wayland/gpu/wayland_surface_factory.cc b/ui/ozone/platform/wayland/gpu/wayland_surface_factory.cc
index 7ed05c48f13e3..991118193b2c9 100644
--- a/ui/ozone/platform/wayland/gpu/wayland_surface_factory.cc
+++ b/ui/ozone/platform/wayland/gpu/wayland_surface_factory.cc
@@ -164,6 +164,16 @@ scoped_refptr<gl::GLSurface> GLOzoneEGLWayland::CreateOffscreenGLSurface(
 }
 
 gl::EGLDisplayPlatform GLOzoneEGLWayland::GetNativeDisplay() {
+#if defined(WAYLAND_GBM)
+  GbmDevice* const device = buffer_manager_->GetGbmDevice();
+  if (device != nullptr) {
+    gbm_device* gbm = device->get();
+    if (gbm) {
+      return gl::EGLDisplayPlatform(
+          reinterpret_cast<EGLNativeDisplayType>(gbm), EGL_PLATFORM_GBM_KHR);
+    }
+  }
+#endif
   if (connection_)
     return gl::EGLDisplayPlatform(
         reinterpret_cast<EGLNativeDisplayType>(connection_->display()));
-- 
2.17.1

